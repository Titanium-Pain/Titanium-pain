{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;AAUR,aAAK,EAAC,EAAE;AACR,iBAAS,EAAC,CAAC;AACX,qBAAa,EAAC,GAAG;KACpB;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,CAAC;KAC5D;;AAED,gBAAY,EAAE,wBAAU;AACpB,YAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAC,IAAI,CAAC,aAAa,IAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,IAAI,CAAC,aAAa,IAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAC,IAAI,CAAC,aAAa,IAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,IAAI,CAAC,aAAa,EAAC;AAChI,mBAAO,IAAI,CAAC;SACf;AACD,eAAO,KAAK,CAAC;KAChB;;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;;;;;;;;;;;;;;;AAelB,YAAI,CAAC,IAAI,CAAC,CAAC,IAAE,IAAI,CAAC,KAAK,CAAC;AACxB,YAAG,IAAI,CAAC,YAAY,EAAE,EAAC;AACnB,gBAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;KACJ;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        speed:10,\r\n        direction:0,\r\n        shootingrange:250,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.node.parent.getComponent(\"Player\").playShootSound();\r\n    },\r\n    \r\n    outOfTheWall: function(){\r\n        if(this.node.x>this.shootingrange||this.node.x<-this.shootingrange||this.node.y>this.shootingrange||this.node.y<-this.shootingrange){\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        /*switch(this.direction){\r\n            case 0:\r\n                this.node.y+=this.speed;\r\n                break;\r\n            case 1:\r\n                this.node.x+=this.speed;\r\n                break;\r\n            case 2:\r\n                this.node.y-=this.speed;\r\n                break;\r\n            case 3:\r\n                this.node.x-=this.speed;\r\n                break;\r\n        }*/\r\n        this.node.y+=this.speed;\r\n        if(this.outOfTheWall()){\r\n            this.node.destroy();\r\n        }\r\n    },\r\n});\r\n"
  ]
}